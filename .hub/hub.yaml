version: 1
kind: application
meta:
  name: 'spring-boot:1'
  brief: Java microservice with Spring Boot
  source:
    dir: .
requires:
  - kubernetes
  - jenkins
components:
  - name: ecr
    source:
      dir: components/ecr
  - name: ecr-config
    source:
      dir: components/ecr-config
  - name: jenkins-iam-role
    source:
      dir: components/jenkins-iam-role
  - name: github-repository
    source:
      dir: components/github-repository
outputs:
  - name: application.docker.image
    value: '${component.docker.registry.image}'
  - name: application.name
    value: '${application.name}'
  - name: application.namespace
    value: '${application.namespace}'
  - name: application.jenkins.namespace
    value: '${component.jenkins.namespace}'
  - name: application.fqdn
    value: '${application.ingress.host}'
  - name: application.path
    value: '${application.path}'
  - name: application.port
  - name: application.url
    value: >-
      ${component.ingress.protocol}://${application.ingress.host}${application.path}
  - name: application.jenkins.pipeline.url
    value: >-
      ${component.jenkins.url}/job/${application.name}/job/${application.pipeline.name}-${application.name}
  - name: application.promotion.templates
    value: 'simple-promote,container-promotion'
  - name: application.cloud.role
    value: '${component.jenkins-iam-role.roleArn}'
  - name: application.git.remote
    value: '${component.git.remote}'
  - name: application.git.user
    value: '${component.git.organization}'
  - name: application.git.kind
    values: '${application.git.kind}'
templates:
  files:
    - templates/*.template
    - templates/harbor/*.template
    - templates/ecr/*.template
parameters:
  - name: application.name
    value: springboot-app
    env: APPLICATION_NAME
  - name: application.description
    value: Java application
  - name: application.namespace
    value: applications
  - name: application.replicas
    value: 1
  - name: application.version
    value: latest
  - name: application.port
    value: 8080
  - name: application.state.file
    fromEnv: APP_STATE_FILE
  - name: application.ingress.host
    value: '${application.name}.${component.ingress.fqdn}'
  - name: application.path
    value: /
  - name: application.environment.name
    value: ''
  - name: application.pipeline.name
    value: main
  - name: component.ingress.protocol
  - name: component.ingress.fqdn
  - name: component.docker.registry.image
  - name: component.docker.registry.kind
    env: DOCKER_REGISTRY_KIND
  - name: component.jenkins.url
  - name: component.jenkins.namespace
    value: jenkins
  - name: dns.domain
    env: DOMAIN_NAME
  - name: cloud.region
  - name: terraform.bucket.name
  - name: terraform.bucket.region
  - name: application.ecr.path
    value: '${application.name}'
  - name: component.ecr.name
    value: '${dns.domain}/${application.ecr.path}'
  - name: component.ecr-config.namespace
    value: '${component.jenkins.namespace}'
  - name: component.ecr-config.configMapName
    value: '${application.name}-ecr-config'
  - name: docker.config.reference
    kind: link
    value: '${component.ecr-config.configMapName}'
  - name: cloud.role.worker
  - name: component.jenkins-iam-role.name
    value: '${dns.domain}/${application.name}'
  - name: component.jenkins-iam-role.roleArn
  - name: application.git.kind
    value: github
  - name: component.github.token
    fromEnv: COMPONENT_GITHUB_TOKEN
    default: token
  - name: component.github.repository.organization
    kind: user
  - name: component.github.repository.name
    value: spring-boot
  - name: component.github.webhook.name
    value: github
  - name: component.github.webhook.events.json
    value: '["push"]'
  - name: component.github.repository.description
    value: '${application.description}'
  - name: component.git.remote
  - name: component.git.organization
    value: '${component.github.repository.organization}'
  - name: component.git.token
    value: '${component.github.token}'
lifecycle:
  order:
    - ecr
    - ecr-config
    - jenkins-iam-role
    - github-repository
